 
Data Science & Analytics Project Definition:

Updated: 2024.04.18

Project Name: Investment_Portfolio_App

Project and Work Product Description: 

   Capturing and maintaing Buy/Sell Stock investments (your portfolio) for the beginner.
   Keep all your Buy/Sell transactions in one manageable place.
   Pull desired/chosen Ticker symbols from yfiance RestAPI. 
   
     
    High-level workflow Diagram:
      AS-IS <<Investment_Portfolio_App.drawio>> open at https://app.diagrams.net/?src=about#
      TO-BE <<Investment_Portfolio_App_v1.drawio>> open at https://app.diagrams.net/?src=about#
Description of Solution: 
	
     - convert Jupyter Notebook code and markdown cells into a reusable Python program that performs Stock Portfolio (Buy/Sell) transactions
     - use real-time data feeds to obtain current data sets using RestAPI (yfinance).
     - integrate the 2nd repo using streamlit framework to display and analyze the captured data sets.

     Additional requirements:
       - create a database to store captured information 
       - 
     
    Using two repo sources: 
    https://github.com/kdboller/pythonsp500  and  https://streamlit.io/gallery?category=finance-business  
    
    Refactor these repos to extend there current functionality as follows:
    v1:
       1: convert Jupyter Notebook code and markdown cells into a reusable Python program that performs Stock Portfolio (Buy/Sell) transactions
       2: use real-time data feeds to obtain current data sets using RestAPI (yfinance).
       3: integrate the 2nd repo using streamlit framework to view the captured data sets.
 
    v2:
       1: integrate a SQLite database to store the data in one or more tables. 
       2: query data from SQLite db and export data into either a comma delimited or excel file format.
       3: produce plotly or matplotlib graphics for certain data sets.
       
              
Solution Design (high-level):

 -- Change Log --

4/15/2024: 

    -- Jonathan -- Investment_Portfolio_App

    -Changed xlsx sheet to separate each transaction 
    -Rewrote most of the originally forked app to properly utilize FIFO accounting.  
    -Added code to pull current data from yfinance API 
    -Added code to iterate on each transaction in the transactions tab, and copy each ticker only once to the summary page 
    -Added calculations for profits, realized gains, and current value for each ticker 

    -- Joe -- Invesment Portfolio (SWAST Handover Delays -- source/repo)

    - Explored the existing projects for finance sector
    - Created a new python file investment_portfolio.py
    - Added/updated the code/functions in the above file
    - Added an image file with NTAI logo
    - Tested the investment_portfolio.py

4/16/2024:  

    -- Jonathan --

    -Added cost basis calculation to summary page 
    -Added unrealized gains calculation to summary page 
    -Added rounding to 2 decimal places 

4/17/2024: 
    - Added a new column called "Investor" in the existing spreadsheet provided by Jonathan
    - modify the code in streamlit repo to include the new column "Investor"  provided by Joe       

Ongoing issues: 

     -- Jonathan --

    -Adding new ticker in transaction sheet results in key error. 
    -Handle all the null values being displayed on streamlit app. 
    -Double check consistency of outputs to ensure cells don't change unexpectedly. 
       -- ** completed 4/18/2024 **
     -- Joe --
     
    - Continued the cycle "test > develop > debug > test" 
    - Added more code into the .py file for rendering the logo, title and content
    - Added a column called "Investor" in the existing spreadsheet provided by Jonathan
    - Created an env for running the web application
    - Fixed the code after testing with the env

    https://github.com/jonrebelo/Investment_Portfolio_App/tree/JoeLi_branch

          -- ** completed 4/18/2024 **

4/17/2024: 
    - confirm if adding any new columns in excel spreadsheet for 2nd repo will affect
    the existing code in the 1st repo (Investment_Portfolio_App).
    - add flowchart for 2nd repo to show how the code works.
    - update yml file with the latest changes.
       -- ** completed 4/18/2024 **
To do:

-Add column for different investors 
       -- ** completed 4/18/2024 **

- To explore web page input option
- To call existing .py file
    
- v1 of the project is complete end of day 4/18/2024

Solution Code Description (low-level design): 
	* yfinance API to pull current stock data into Transaction sheet of excel file.
    * Calculate the cost basis, realized gains, and current value of each ticker in the excel file.
    * summary page to display the realized gains, unrealized gains, and cost basis of each ticker.
    * Streamlit to display the data per ticker for each investor.

    * Software packages (Python packages, etc.)
          yfinance, pandas, numpy, datetime, matplotlib.pyplot, plotly
          streamlit, openpyxl

	
Actual Working Product Code: 
    Functions, modules, packages, documentation 
    
 
    
Application Instructions:

    * Step-by-step instructions for OTHERS:
        Instructions to install, set-up, and use your software:
        # obtain repo from github
            download the code from the repo @ https://github.com/jonrebelo/Investment_Portfolio_App  
          
         # create virtual envrionment 
            conda create --name Investment_Portfolio_App -c conda-forge yfinance pandas numpy datetime matplotlib.pyplot plotly
         streamlit openpyxl 
          
        ## Activate the environment
            conda activate candidate_connect

        ## Install additional packages in the environment for generating diagrams
        
        ## Run the code
            python Investment_Portfolio_App.py
        
        # may have to manually modify the Ticker column in excel sheet to match the yfinance API
           open the excel sheet and modify the Ticker column to match the yfinance API.